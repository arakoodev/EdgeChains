const React = require('react');
const {
  render
} = require('ink');
const importJSX = require('@isaacs/import-jsx');
/* istanbul ignore next */
const reporter = {
  report(tap, Type = 'base') {
    // NB: React will only render as a tag if it's capitalized
    if (typeof Type === 'function' && Type.prototype.isReactComponent) return render( /*#__PURE__*/React.createElement(Type, {
      tap: tap
    }));
    if (typeof Type !== 'string' || !types.includes(Type)) throw new Error('unsupported report type: ' + Type);
    const Report = importJSX('./reports/' + Type);
    render( /*#__PURE__*/React.createElement(Report, {
      tap: tap
    }));
  }
};

/* istanbul ignore next */
module.exports = (...args) => reporter.report(...args);
const types = module.exports.types = require('../types.js');
const cap = s => s.replace(/^./, $0 => $0.toUpperCase());
types.forEach(type => Object.defineProperty(module.exports, cap(type), {
  get: () => importJSX(`./reports/${type}`),
  enumerable: true
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJyZW5kZXIiLCJpbXBvcnRKU1giLCJyZXBvcnRlciIsInJlcG9ydCIsInRhcCIsIlR5cGUiLCJwcm90b3R5cGUiLCJpc1JlYWN0Q29tcG9uZW50IiwiY3JlYXRlRWxlbWVudCIsInR5cGVzIiwiaW5jbHVkZXMiLCJFcnJvciIsIlJlcG9ydCIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcmdzIiwiY2FwIiwicyIsInJlcGxhY2UiLCIkMCIsInRvVXBwZXJDYXNlIiwiZm9yRWFjaCIsInR5cGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImVudW1lcmFibGUiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0JylcbmNvbnN0IHtyZW5kZXJ9ID0gcmVxdWlyZSgnaW5rJylcbmNvbnN0IGltcG9ydEpTWCA9IHJlcXVpcmUoJ0Bpc2FhY3MvaW1wb3J0LWpzeCcpXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuY29uc3QgcmVwb3J0ZXIgPSB7XG4gIHJlcG9ydCAodGFwLCBUeXBlID0gJ2Jhc2UnKSB7XG4gICAgLy8gTkI6IFJlYWN0IHdpbGwgb25seSByZW5kZXIgYXMgYSB0YWcgaWYgaXQncyBjYXBpdGFsaXplZFxuICAgIGlmICh0eXBlb2YgVHlwZSA9PT0gJ2Z1bmN0aW9uJyAmJiBUeXBlLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KVxuICAgICAgcmV0dXJuIHJlbmRlcig8VHlwZSB0YXA9e3RhcH0gLz4pXG5cbiAgICBpZiAodHlwZW9mIFR5cGUgIT09ICdzdHJpbmcnIHx8ICF0eXBlcy5pbmNsdWRlcyhUeXBlKSlcbiAgICAgIHRocm93IG5ldyBFcnJvcigndW5zdXBwb3J0ZWQgcmVwb3J0IHR5cGU6ICcgKyBUeXBlKVxuXG4gICAgY29uc3QgUmVwb3J0ID0gaW1wb3J0SlNYKCcuL3JlcG9ydHMvJyArIFR5cGUpXG4gICAgcmVuZGVyKDxSZXBvcnQgdGFwPXt0YXB9IC8+KVxuICB9XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5tb2R1bGUuZXhwb3J0cyA9ICguLi5hcmdzKSA9PiByZXBvcnRlci5yZXBvcnQoLi4uYXJncylcblxuY29uc3QgdHlwZXMgPSBtb2R1bGUuZXhwb3J0cy50eXBlcyA9IHJlcXVpcmUoJy4uL3R5cGVzLmpzJylcbmNvbnN0IGNhcCA9IHMgPT4gcy5yZXBsYWNlKC9eLi8sICQwID0+ICQwLnRvVXBwZXJDYXNlKCkpXG50eXBlcy5mb3JFYWNoKHR5cGUgPT5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZS5leHBvcnRzLCBjYXAodHlwZSksIHtcbiAgICBnZXQ6ICgpID0+IGltcG9ydEpTWChgLi9yZXBvcnRzLyR7dHlwZX1gKSxcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICB9KSlcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQzlCLE1BQU07RUFBQ0M7QUFBTSxDQUFDLEdBQUdELE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDL0IsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDL0M7QUFDQSxNQUFNRyxRQUFRLEdBQUc7RUFDZkMsTUFBTUEsQ0FBRUMsR0FBRyxFQUFFQyxJQUFJLEdBQUcsTUFBTSxFQUFFO0lBQzFCO0lBQ0EsSUFBSSxPQUFPQSxJQUFJLEtBQUssVUFBVSxJQUFJQSxJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsZ0JBQWdCLEVBQy9ELE9BQU9QLE1BQU0sZUFBQ0YsS0FBQSxDQUFBVSxhQUFBLENBQUNILElBQUk7TUFBQ0QsR0FBRyxFQUFFQTtJQUFJLENBQUUsQ0FBQyxDQUFDO0lBRW5DLElBQUksT0FBT0MsSUFBSSxLQUFLLFFBQVEsSUFBSSxDQUFDSSxLQUFLLENBQUNDLFFBQVEsQ0FBQ0wsSUFBSSxDQUFDLEVBQ25ELE1BQU0sSUFBSU0sS0FBSyxDQUFDLDJCQUEyQixHQUFHTixJQUFJLENBQUM7SUFFckQsTUFBTU8sTUFBTSxHQUFHWCxTQUFTLENBQUMsWUFBWSxHQUFHSSxJQUFJLENBQUM7SUFDN0NMLE1BQU0sZUFBQ0YsS0FBQSxDQUFBVSxhQUFBLENBQUNJLE1BQU07TUFBQ1IsR0FBRyxFQUFFQTtJQUFJLENBQUUsQ0FBQyxDQUFDO0VBQzlCO0FBQ0YsQ0FBQzs7QUFFRDtBQUNBUyxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDLEdBQUdDLElBQUksS0FBS2IsUUFBUSxDQUFDQyxNQUFNLENBQUMsR0FBR1ksSUFBSSxDQUFDO0FBRXRELE1BQU1OLEtBQUssR0FBR0ksTUFBTSxDQUFDQyxPQUFPLENBQUNMLEtBQUssR0FBR1YsT0FBTyxDQUFDLGFBQWEsQ0FBQztBQUMzRCxNQUFNaUIsR0FBRyxHQUFHQyxDQUFDLElBQUlBLENBQUMsQ0FBQ0MsT0FBTyxDQUFDLElBQUksRUFBRUMsRUFBRSxJQUFJQSxFQUFFLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFDeERYLEtBQUssQ0FBQ1ksT0FBTyxDQUFDQyxJQUFJLElBQ2hCQyxNQUFNLENBQUNDLGNBQWMsQ0FBQ1gsTUFBTSxDQUFDQyxPQUFPLEVBQUVFLEdBQUcsQ0FBQ00sSUFBSSxDQUFDLEVBQUU7RUFDL0NHLEdBQUcsRUFBRUEsQ0FBQSxLQUFNeEIsU0FBUyxDQUFFLGFBQVlxQixJQUFLLEVBQUMsQ0FBQztFQUN6Q0ksVUFBVSxFQUFFO0FBQ2QsQ0FBQyxDQUFDLENBQUMifQ==