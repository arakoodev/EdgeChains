<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.flyspring</groupId>
		<artifactId>edgechain-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>edgechain-app</artifactId>
	<version>1.0.0</version>
	<name>edgechain</name>
	<description>EdgeChains SDK.</description>
	<packaging>jar</packaging>

	<properties>
		<auth0-jwt.version>4.4.0</auth0-jwt.version>
		<djl.version>0.23.0</djl.version>
		<exp4j.version>0.4.8</exp4j.version>
		<hibernate-validator>6.0.23.Final</hibernate-validator>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<jsonwebtoken.version>0.9.1</jsonwebtoken.version>
		<jtokkit.version>0.6.1</jtokkit.version>
		<modelmapper.version>3.1.1</modelmapper.version>
		<opennlp.version>2.2.0</opennlp.version>
		<retrofit2.version>2.9.0</retrofit2.version>
		<uuid-creator.version>5.2.0</uuid-creator.version>
		<validation-api.version>2.0.1.Final</validation-api.version>
		<xtrasonnet.version>0.5.3</xtrasonnet.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation-api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.f4b6a3</groupId>
			<artifactId>uuid-creator</artifactId>
			<version>${uuid-creator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator}</version>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>${modelmapper.version}</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jsonwebtoken.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb-api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>retrofit</artifactId>
			<version>${retrofit2.version}</version>
		</dependency>

		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>adapter-rxjava3</artifactId>
			<version>${retrofit2.version}</version>
		</dependency>

		<dependency>
			<groupId>com.squareup.retrofit2</groupId>
			<artifactId>converter-jackson</artifactId>
			<version>${retrofit2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.opennlp</groupId>
			<artifactId>opennlp-tools</artifactId>
			<version>${opennlp.version}</version>
		</dependency>

		<dependency>
			<groupId>io.reactivex.rxjava3</groupId>
			<artifactId>rxjava</artifactId>
		</dependency>

		<dependency>
			<groupId>io.reactivex</groupId>
			<artifactId>rxjava-reactive-streams</artifactId>
			<version>${rxjava-reactive-streams.version}</version>
		</dependency>

		<dependency>
			<groupId>io.projectreactor.addons</groupId>
			<artifactId>reactor-adapter</artifactId>
		</dependency>

		<dependency>
			<groupId>me.xuender</groupId>
			<artifactId>unidecode</artifactId>
			<version>${unidecode.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>${apache-tika.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers-standard-package</artifactId>
			<version>${apache-tika.version}</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>ai.djl</groupId>
			<artifactId>api</artifactId>
			<version>${djl.version}</version>
		</dependency>

		<dependency>
			<groupId>ai.djl</groupId>
			<artifactId>basicdataset</artifactId>
			<version>${djl.version}</version>
		</dependency>

		<dependency>
			<groupId>ai.djl.huggingface</groupId>
			<artifactId>tokenizers</artifactId>
			<version>${djl.version}</version>
		</dependency>

		<dependency>
			<groupId>ai.djl</groupId>
			<artifactId>model-zoo</artifactId>
			<version>${djl.version}</version>
		</dependency>

		<!-- Pytorch -->

		<dependency>
			<groupId>ai.djl.pytorch</groupId>
			<artifactId>pytorch-engine</artifactId>
			<version>${djl.version}</version>
		</dependency>

		<dependency>
			<groupId>ai.djl.pytorch</groupId>
			<artifactId>pytorch-model-zoo</artifactId>
			<version>${djl.version}</version>
		</dependency>


		<dependency>
			<groupId>io.github.jam01</groupId>
			<artifactId>xtrasonnet</artifactId>
			<version>${xtrasonnet.version}</version>
		</dependency>

		<dependency>
			<groupId>com.knuddels</groupId>
			<artifactId>jtokkit</artifactId>
			<version>${jtokkit.version}</version>
		</dependency>

		<dependency>
			<groupId>net.objecthunter</groupId>
			<artifactId>exp4j</artifactId>
			<version>${exp4j.version}</version>
		</dependency>

		<!-- flyfly -->
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli-spring-boot-starter</artifactId>
			<version>${picocli.version}</version>
		</dependency>

		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>${zip4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.zeroturnaround</groupId>
			<artifactId>zt-exec</artifactId>
			<version>${zeroturnaround.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ai.djl.onnxruntime</groupId>
			<artifactId>onnxruntime-engine</artifactId>
			<version>${djl.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
    
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${auth0-jwt.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade.version}</version>

				<dependencies>
					<dependency>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<version>${spring-boot.version}</version>
					</dependency>
				</dependencies>

				<configuration>
					<createDependencyReducedPom>false</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>

				<executions>
					<execution>
						<id>shade-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>

						<configuration>
							<finalName>edgechain</finalName>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/spring.handlers</resource>
									<resource>META-INF/spring.schemas</resource>
                                    <!--                                        <resource>META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports</resource>-->
									<resource>
										META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports
									</resource>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.edgechain.EdgeChainApplication</mainClass>
								</transformer>
							</transformers>

						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun.version}</version>
				<executions>
					<execution>
						<id>download-and-unpack-jbang</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- Download Jbang archive -->
								<get
									src="https://github.com/jbangdev/jbang/releases/download/v0.109.0/jbang.zip"
									dest="${project.build.directory}/jbang.zip"
									skipexisting="true" />

								<!-- Unpack Jbang archive -->
								<unzip src="${project.build.directory}/jbang.zip"
									dest="${project.build.directory}/jbang" />

								<!-- Copy only the 'jbang.jar' file to the 'src/main/resources'
								directory -->
								<copy
									file="${project.build.directory}/jbang/jbang/bin/jbang.jar"
									tofile="${project.basedir}/src/main/resources/jbang.jar" />

								<!-- Remove the temporary Jbang folder -->
								<delete includeemptydirs="true">
									<fileset dir="${project.build.directory}">
										<include name="jbang/**" />
									</fileset>
								</delete>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>