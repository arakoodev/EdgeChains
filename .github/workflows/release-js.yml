name: Release Js

on:
    workflow_dispatch

permissions:
  contents: write

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Prettier
        run: npm install prettier
      - name: Install ESLint
        run: >
          npm install eslint@latest && 
          npm install @microsoft/eslint-formatter-sarif@latest eslint-config-google@latest eslint-plugin-import@latest @typescript-eslint/eslint-plugin@latest @typescript-eslint/parser@latest eslint-config-prettier@latest eslint-plugin-prettier@latest
      - name: Get cache date
        id: get-date
        run: echo "name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash
      - name: ESLint Cache
        uses: actions/cache@v3
        with:
          path: ./.eslintcache
          key: ${{ runner.os }}-eslintcache-${{ hashFiles('./eslintcache') }}
          restore-keys: |
            ${{ runner.os }}-eslintcache-
      - name: Run ESLint
        run: npx eslint JS
          --fix
          --cache
          --config JS/.eslintrc.js
          --ext .js,.jsx,.ts,.tsx
        continue-on-error: true

      - name: Run Prettiers
        run: npx prettier --tab-width 4 --print-width 100 --trailing-comma es5  --ignore-path "$(CURDIR)/node_modules/*" --write JS/
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automatically applying Prettier changes
          commit_user_name: GitHub Actions
          commit_user_email: actions@github.com
          commit_author: GitHub Actions <actions@github.com>
          branch: ${{ github.head_ref }}

  release:
    name: release-js
    needs: formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Goto JS folder
        run: cd JS/edgechains/lib

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        working-directory: JS/edgechains/lib

      - name: Build edgechain-app project
        run: npm run build
        working-directory: JS/edgechains/lib

      - name: Package edgechain-app project
        run: npm pack
        working-directory: JS/edgechains/lib

      - name: Upload release Tarball
        uses: actions/upload-artifact@v3
        with:
          name: release-artifact
          path: 'JS/edgechains/lib/*.tgz'
